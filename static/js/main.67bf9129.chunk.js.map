{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","items","map","itemsCountPerPage","Pagination","props","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","className","cn","disabled","href","onClick","page","active","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","firstItemIndex","lastItemIndex","length","shownItems","slice","id","value","onChange","event","Number","target","itemsNumber","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EAGF,IAAMG,EAAQN,EAAW,EAAG,IAChCO,KAAI,SAAAH,GAAC,qBAAYA,MAEPI,EAAoB,CAAC,EAAG,EAAG,GAAI,I,OCD/BC,EAAwB,SAACC,GACpC,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQlB,EAAW,EAAGe,GAgB5B,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBR,IAFd,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QApBW,WACG,IAAhBV,GAIJC,EAAaD,EAAc,IAUvB,oBAWDK,EAAMX,KAAK,SAAAiB,GAAI,OACd,oBAAIL,UAAWC,IACb,YACA,CAAEK,OAAQD,IAASX,IAFrB,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMT,EAAaU,IAJ9B,SAMGA,SAKP,oBAAIL,UAAWC,IACb,YACA,CAAEC,SAAUR,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QA3DW,WACbV,IAAgBE,GAClBD,EAAaD,EAAc,IAoDzB,wBCxEKa,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOd,EAAP,KAAoBiB,EAApB,KAEMC,EAAiBH,GAAgBf,EAAc,GAC/CmB,EAAgBD,EAAiBH,GAAgBtB,EAAM2B,OACzDF,EAAiBH,EACjBtB,EAAM2B,OAEJC,EAAa5B,EAAM6B,MAAMJ,EAAgBC,GAM/C,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCkB,EAAiB,EADlD,cACyDC,EADzD,eAC6E1B,EAAM2B,OADnF,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOT,EACPU,SAAU,SAACC,GACTV,EAAgBW,OAAOD,EAAME,OAAOJ,QACpCP,EAAe,IAPnB,SAUGtB,EAAkBD,KAAI,SAAAmC,GAAW,OAChC,wBACEL,MAAOK,EADT,SAIGA,GAFIA,UAQb,uBAAOC,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOL,EAAM2B,OACbrB,QAASgB,EACTf,YAAaA,EACbC,aA5CmB,SAACU,GACxBM,EAAeN,MA8Cb,6BACGU,EAAW3B,KAAI,SAAAqC,GAAI,OAClB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YChEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.67bf9129.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport const items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const itemsCountPerPage = [3, 5, 10, 20];\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void\n\n}\n\nexport const Pagination: FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesCount);\n\n  const handleNext = () => {\n    if (currentPage !== pagesCount) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange(currentPage - 1);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrev}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((page => (\n        <li className={cn(\n          'page-item',\n          { active: page === currentPage },\n        )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      )))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === pagesCount },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesCount}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { items, itemsCountPerPage } from './utils';\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstItemIndex = itemsPerPage * (currentPage - 1);\n  const lastItemIndex = firstItemIndex + itemsPerPage <= items.length\n    ? firstItemIndex + itemsPerPage\n    : items.length;\n\n  const shownItems = items.slice(firstItemIndex, lastItemIndex);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${lastItemIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(Number(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            {itemsCountPerPage.map(itemsNumber => (\n              <option\n                value={itemsNumber}\n                key={itemsNumber}\n              >\n                {itemsNumber}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {shownItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}